/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment_ds;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.Color;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.UIManager;

public class Players extends javax.swing.JFrame {

    /**
     * Creates new form Players
     */
    public Players() {
        initComponents();
    }
    String url = "jdbc:mysql://localhost:3308/assignment2";
    String username = "root";
    String password = "";

    DatabaseConnection dbConnection = new DatabaseConnection(url, username, password);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton17 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Player1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Player2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Player3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Player4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Player5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Player6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Player7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Player8");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Player9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Player10");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Player14");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Player13");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Player12");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Player15");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Player11");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("Back");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Summary");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton16))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(367, 367, 367)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3)))))
                        .addGap(0, 96, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(314, 314, 314)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton9)
                    .addComponent(jButton10))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton14)
                    .addComponent(jButton11)
                    .addComponent(jButton12)
                    .addComponent(jButton13)
                    .addComponent(jButton15))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jButton17)
                .addGap(20, 20, 20)
                .addComponent(jButton16)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   try {
        ResultSet rs = dbConnection.getPlayerData(1);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 1.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
  try {
        ResultSet rs = dbConnection.getPlayerData(6);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 6.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }       
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
  try {
        ResultSet rs = dbConnection.getPlayerData(7);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 7.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }       
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
try {
        ResultSet rs = dbConnection.getPlayerData(8);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 8.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }            
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
  try {
        ResultSet rs = dbConnection.getPlayerData(9);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 9.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }           
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
 try {
        ResultSet rs = dbConnection.getPlayerData(10);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 10.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }       
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
  try {
        ResultSet rs = dbConnection.getPlayerData(14);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 14.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }       
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
 try {
        ResultSet rs = dbConnection.getPlayerData(13);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 13.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }       
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
  try {
        ResultSet rs = dbConnection.getPlayerData(12);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 12.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }       
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
  try {
        ResultSet rs = dbConnection.getPlayerData(15);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 15.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }        
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
  try {
        ResultSet rs = dbConnection.getPlayerData(11);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 11.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }         
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
try {
        ResultSet rs = dbConnection.getPlayerData(2);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 2.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }       
  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
  try {
        ResultSet rs = dbConnection.getPlayerData(3);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 3.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }          
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
  try {
        ResultSet rs = dbConnection.getPlayerData(4);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 4.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }          
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
  try {
        ResultSet rs = dbConnection.getPlayerData(5);
        if (rs.next()) {
            String name = rs.getString("Name");
            int age = rs.getInt("Age");
            String position = rs.getString("Position");
            double salary = rs.getDouble("Salary");
            double height = rs.getDouble("Height");
            double weight = rs.getDouble("Weight");

            JOptionPane.showMessageDialog(null, 
                "Name: " + name + "\nAge: " + age + "\nPosition: " + position + 
                "\nSalary: $" + salary + "\nHeight: " + height + " meters\nWeight: " + weight + " kg");
        } else {
            JOptionPane.showMessageDialog(null, "No data found for player 5.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
    Homepage homepage = new Homepage(); 
    homepage.setVisible(true); 
    this.dispose(); 
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
try {
        ResultSet rs = dbConnection.getPlayerSummary();
        if (rs.next()) {
            int totalPlayers = rs.getInt("TotalPlayers");
            int guards = rs.getInt("Guards");
            int forwards = rs.getInt("Forwards");
            int centers = rs.getInt("Centers");
            double totalSalary = rs.getDouble("TotalSalary");

            StringBuilder message = new StringBuilder();

            if (totalPlayers < 10 || totalPlayers > 15) {
                message.append("<font color='red'>Total Players: ").append(totalPlayers).append("</font><br>");
            } else {
                message.append("Total Players: ").append(totalPlayers).append("<br>");
            }

            if (guards < 2) {
                message.append("<font color='red'>Guards: ").append(guards).append("</font><br>");
            } else {
                message.append("Guards: ").append(guards).append("<br>");
            }

            if (forwards < 2) {
                message.append("<font color='red'>Forwards: ").append(forwards).append("</font><br>");
            } else {
                message.append("Forwards: ").append(forwards).append("<br>");
            }

            if (centers < 2) {
                message.append("<font color='red'>Centers: ").append(centers).append("</font><br>");
            } else {
                message.append("Centers: ").append(centers).append("<br>");
            }

            if (totalSalary > 20000) {
                message.append("<font color='red'>Total Salary: $").append(totalSalary).append("</font>");
            } else {
                message.append("Total Salary: $").append(totalSalary);
            }

            JOptionPane.showMessageDialog(null, "<html>" + message.toString() + "</html>");
        } else {
            JOptionPane.showMessageDialog(null, "No player data found.");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        e.printStackTrace();
    }
    }//GEN-LAST:event_jButton17ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Players.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Players.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Players.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Players.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Players().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
