package assignment_ds;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author chianye
 */
public class TeamRoaster extends javax.swing.JFrame {
private DatabaseConnection dbConnection;
    /**
     * Creates new form TeamRoaster1
     */
    public TeamRoaster(DatabaseConnection dbConnection) {
        initComponents();
        setLocationRelativeTo(null);
        this.dbConnection = dbConnection;
    }
    
    private void loadTeamData() {
        String url = "jdbc:mysql://localhost:3307/nba";
        String username = "root";
        String password = "";
        try {
            // Load MySQL JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Connect to the database
            Connection conn = DriverManager.getConnection(url, username, password);
            Statement st = conn.createStatement();
            String sql = "select * from assignment2";
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                String name = rs.getString("Name");
                String age = String.valueOf(rs.getInt("Age"));
                String position = rs.getString("Position");
                String salary = String.valueOf(rs.getDouble("Salary"));
                String height = String.valueOf(rs.getDouble("Height"));
                String weight = String.valueOf(rs.getInt("Weight"));
                
                //String array to store data into jtable
                
                String []data = {"Name", "Age", "Position", "Salary", "Height", "Weight"};
                DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                
                // add string array data into table
                model.addRow(new Object[]{name, age, position, salary, height, weight});
            }
            conn.close();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        showData = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        summary = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(178, 204, 251));

        showData.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        showData.setText("Show data");
        showData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDataActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(232, 76, 76));
        back.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 255));
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(49, 113, 179));
        jTable1.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Age", "Position", "Salary", "Height", "Weight"
            }
        ));
        jTable1.setSelectionBackground(new java.awt.Color(240, 85, 85));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(130);
        }

        summary.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        summary.setText("Summary");
        summary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\23004\\OneDrive\\Pictures\\NBA-Logo-1.png")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 30)); // NOI18N
        jLabel2.setText("Team Roster");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(showData, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(summary, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addComponent(back)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showData, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(summary, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(back)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDataActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3307/nba";
        String username = "root";
        String password = "";
        try {
            // Load MySQL JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Connect to the database
            Connection conn = DriverManager.getConnection(url, username, password);
            Statement st = conn.createStatement();
            String sql = "select * from assignment2";
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                String name = rs.getString("Name");
                String age = String.valueOf(rs.getInt("Age"));
                String position = rs.getString("Position");
                String salary = String.valueOf(rs.getDouble("Salary"));
                String height = String.valueOf(rs.getDouble("Height"));
                String weight = String.valueOf(rs.getInt("Weight"));
                
                //String array to store data into jtable
                
                String []data = {"Name", "Age", "Position", "Salary", "Height", "Weight"};
                DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                
                // add string array data into table
                model.addRow(new Object[]{name, age, position, salary, height, weight});
            }
            conn.close();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_showDataActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Homepage().setVisible(true);
        
    }//GEN-LAST:event_backActionPerformed

    private void summaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryActionPerformed
        // TODO add your handling code here:
        try {
            ResultSet rs = dbConnection.getPlayerSummary();
            if (rs.next()) {
                int totalPlayers = rs.getInt("TotalPlayers");
                int guards = rs.getInt("Guards");
                int forwards = rs.getInt("Forwards");
                int centers = rs.getInt("Centers");
                double totalSalary = rs.getDouble("TotalSalary");
                int totalSuperstar = rs.getInt("TotalSuperstar");

                StringBuilder message = new StringBuilder();

                if (totalPlayers < 10 || totalPlayers > 15) {
                    message.append("<font color='red'>Total Players: ").append(totalPlayers).append("</font><br>");
                } else {
                    message.append("Total Players: ").append(totalPlayers).append("<br>");
                }

                if (guards < 2) {
                    message.append("<font color='red'>Guards: ").append(guards).append("</font><br>");
                } else {
                    message.append("Guards: ").append(guards).append("<br>");
                }

                if (forwards < 2) {
                    message.append("<font color='red'>Forwards: ").append(forwards).append("</font><br>");
                } else {
                    message.append("Forwards: ").append(forwards).append("<br>");
                }

                if (centers < 2) {
                    message.append("<font color='red'>Centers: ").append(centers).append("</font><br>");
                } else {
                    message.append("Centers: ").append(centers).append("<br>");
                }

                if (totalSalary > 20000) {
                    message.append("<font color='red'>Total Salary: $").append(totalSalary).append("</font>");
                } else {
                    message.append("Total Salary: $").append(totalSalary).append("<br>");
                }
                
                message.append("Total Superstar: ").append(totalSuperstar);

                JOptionPane.showMessageDialog(null, "<html>" + message.toString() + "</html>");
            } else {
                JOptionPane.showMessageDialog(null, "No player data found.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error: Unable to connect to the database!");
        }
    }//GEN-LAST:event_summaryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        DatabaseConnection dbConnection = new DatabaseConnection("jdbc:mysql://localhost:3307/nba", "root", "");
        SwingUtilities.invokeLater(() -> new TeamRoaster(dbConnection).setVisible(true));
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeamRoaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeamRoaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeamRoaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeamRoaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new TeamRoaster().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton showData;
    private javax.swing.JButton summary;
    // End of variables declaration//GEN-END:variables
}
